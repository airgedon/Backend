name: build-project-time

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

 
jobs:
  build:
    runs-on: self-hosted

    steps:
 
      - uses: actions/checkout@v2
          
      - name: login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with: 
          images: deepmatr1x/django

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels}}
 
      - name: Kubectl apply
        uses: okteto/apply@2.12.0
        with: 
          namespace: ${{secrets.NAMESPACE}}
          manifest: django-deployment.yml
 
  setup-build-publish-deploy:
      name: Setup, Build, Publish, and Deploy
      runs-on: self-hosted
      environment: production

      steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

       # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
          .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      - name: Deploy
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#       - id: 'auth'
#         uses: 'google-github-actions/auth@v1'
#         with:
#           workload_identity_provider: 
#           service_account: teodor@eco-spirit-380605.iam.gserviceaccount.com
          
#       - id: 'get-credentials'
#         uses: 'google-github-actions/get-gke-credentials@v1'
#         with:
#           cluster_name: cluster-1
#           location: europe-north1-c
      
#       - id: 'get-pods'
#         run: 'kubectl get pods'

#       - name: Kubectl apply
#         run: |
#           kubectl apply -f django-deployment.yaml 

#       - name: Expose external Service
#         run: |
#           kubectl expose deploy backend --type=LoadBalancer --port=8000 --name=django-svc
          
          
#       - name: Get IP
#         run: |
#           kubectl get svc


       
          

